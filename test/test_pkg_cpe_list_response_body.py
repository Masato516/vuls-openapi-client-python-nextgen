# coding: utf-8

"""
    Future Vuls Public API

    Future Vuls Public API  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapiclient
from openapiclient.models.pkg_cpe_list_response_body import PkgCpeListResponseBody  # noqa: E501
from openapiclient.rest import ApiException

class TestPkgCpeListResponseBody(unittest.TestCase):
    """PkgCpeListResponseBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PkgCpeListResponseBody
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PkgCpeListResponseBody`
        """
        model = openapiclient.models.pkg_cpe_list_response_body.PkgCpeListResponseBody()  # noqa: E501
        if include_optional :
            return PkgCpeListResponseBody(
                application_name = 'Application', 
                cpe_fs = 'cpe:2.3:a:clamav:clamav:*:*:*:*:*:*:*:*', 
                cpe_id = 1, 
                cpe_uri = 'cpe:/a:cisco:ios:15.2', 
                created_at = '2018-07-14T08:13:28Z', 
                github_pkg_id = 1, 
                library_path = '/FutureVuls/go.sum', 
                library_pkg_id = 1, 
                name = 'package01', 
                need_restart_procs = [{"initSystem":"initSystem","path":"path","pid":"12","serviceName":"serviceName"},{"initSystem":"initSystem","path":"path","pid":"12","serviceName":"serviceName"}], 
                new_release = 'new release', 
                new_version = '2.0', 
                not_fixed_yet = True, 
                oss_license = 'ossLicense', 
                pkg_id = 1, 
                release = '14.amzn2', 
                repository = 'repository', 
                server_id = 1, 
                server_name = 'server01', 
                server_uuid = 'abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2', 
                updated_at = '2018-07-14T08:13:28Z', 
                version = '1.0', 
                wordpress_package_status = 'wordpressPackageStatus', 
                wordpress_pkg_id = 1
            )
        else :
            return PkgCpeListResponseBody(
                created_at = '2018-07-14T08:13:28Z',
                name = 'package01',
                server_id = 1,
                server_name = 'server01',
                server_uuid = 'abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2',
                updated_at = '2018-07-14T08:13:28Z',
                version = '1.0',
        )
        """

    def testPkgCpeListResponseBody(self):
        """Test PkgCpeListResponseBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
